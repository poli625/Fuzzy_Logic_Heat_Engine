/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author Patryk Andrzejewski
 * @author Jakub Kret
 * 
 */
public class NewJFrame extends javax.swing.JFrame {

    private double[][] tmp = new double [6][61];
    private double[][] roznica = new double [8][61];
    private double[][] y = new double [16][201];
    private double[] tempgraphvalue = new double [100];
    private int tempgraphpos = 0;
    private int tick = 60;
    private boolean started = false;
    /**
     * Creates new form NewJFrame
     */
    public NewJFrame() {
        super("Sterownik");
        initComponents();
        FuzzyLogic();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jButton1 = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jTextField1 = new javax.swing.JTextField();
        jTextField2 = new javax.swing.JTextField();
        jTextField3 = new javax.swing.JTextField();
        jTextFielddoce = new javax.swing.JTextField();
        jTextFieldstart = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        graph1 = new graph.Graph();
        jTextFieldtick = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jButton1.setText("Start");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jLabel1.setText("°C Docelowy");

        jLabel2.setText("°C Startowy");

        jTextField1.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        jTextField1.setText("Status");

        jTextField2.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        jTextField2.setText("°C");

        jTextField3.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        jTextField3.setText("°C");

        jTextFielddoce.setText("°C");

        jTextFieldstart.setText("°C");
        jTextFieldstart.addInputMethodListener(new java.awt.event.InputMethodListener() {
            public void caretPositionChanged(java.awt.event.InputMethodEvent evt) {
            }
            public void inputMethodTextChanged(java.awt.event.InputMethodEvent evt) {
                jTextFieldstartInputMethodTextChanged(evt);
            }
        });
        jTextFieldstart.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jTextFieldstartKeyTyped(evt);
            }
        });

        jLabel3.setText("Aktualna Temperatura :");

        jLabel4.setText("Ile do temperatury Oczekiwanej :");

        jLabel5.setText("Status :");

        javax.swing.GroupLayout graph1Layout = new javax.swing.GroupLayout(graph1);
        graph1.setLayout(graph1Layout);
        graph1Layout.setHorizontalGroup(
            graph1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 400, Short.MAX_VALUE)
        );
        graph1Layout.setVerticalGroup(
            graph1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 400, Short.MAX_VALUE)
        );

        jTextFieldtick.setText("60");
        jTextFieldtick.addInputMethodListener(new java.awt.event.InputMethodListener() {
            public void caretPositionChanged(java.awt.event.InputMethodEvent evt) {
            }
            public void inputMethodTextChanged(java.awt.event.InputMethodEvent evt) {
                jTextFieldtickInputMethodTextChanged(evt);
            }
        });

        jLabel6.setText("Tick");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(graph1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(49, 49, 49)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 167, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jTextField2)
                            .addComponent(jTextField3)
                            .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, 171, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(141, 141, 141)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 83, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 83, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jTextFielddoce, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jTextFieldstart, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jTextFieldtick, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(179, 179, 179)
                        .addComponent(jButton1)))
                .addContainerGap(15, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jTextFielddoce, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(jTextFieldstart, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTextFieldtick, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel6))
                .addGap(1, 1, 1)
                .addComponent(jButton1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(graph1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTextField2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTextField3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        
//If który zmienia wartość startową w momencie jeżeli nie została wcześniej podana lub została zmieniona
        if(started == false){
            jTextField2.setText(jTextFieldstart.getText());
            started=true;
        }else{}
//Tick czyli ilośćwykonywanych operacji dodana ogrzewania
        tick = Integer.valueOf(jTextFieldtick.getText());
        for(int i = 0;i<=tick;i++){
            if(Double.valueOf(jTextFielddoce.getText())>0){
                jTextField3.setText(String.valueOf(Double.valueOf(jTextFielddoce.getText())-Double.valueOf(jTextField2.getText())));
            }else{
                jTextField3.setText(String.valueOf(Double.valueOf(jTextFielddoce.getText())+Double.valueOf(jTextField2.getText())));
            }
            

//Ustawia odpowiedni teks w zależności od wartości z pola jTextField3
            if(Double.valueOf(jTextField3.getText()) > 0){
                jTextField1.setText("Ogrzewanie");
            }else{
                jTextField1.setText("Wychładzanie");
            }

//Odwołanie do funkcji Zrób(aktualna_temperatura,docelowa_temperatura)
            Zrob(Double.parseDouble(jTextField2.getText()),Double.parseDouble(jTextFielddoce.getText()));
        }

//If zabezpieczający tabelę z indexem aktualnej pozycji w tablicy tempgraphvalue jeżeli przekroczy 99 to reset do 0
        if(tempgraphpos>99){
            tempgraphpos=0;
            tempgraphvalue[tempgraphpos] = Double.parseDouble(jTextField2.getText());
        }else{
            tempgraphvalue[tempgraphpos] = Double.parseDouble(jTextField2.getText());
            tempgraphpos++;
        }

//Odwołanie do komponentu graph który rysuje Graph
        for(int i = 0;i<100;i++){
            graph1.uzupełnij(i, tempgraphvalue[i]);
        }
        graph1.maluj();
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jTextFieldstartInputMethodTextChanged(java.awt.event.InputMethodEvent evt) {//GEN-FIRST:event_jTextFieldstartInputMethodTextChanged
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextFieldstartInputMethodTextChanged

    private void jTextFieldtickInputMethodTextChanged(java.awt.event.InputMethodEvent evt) {//GEN-FIRST:event_jTextFieldtickInputMethodTextChanged
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextFieldtickInputMethodTextChanged

    private void jTextFieldstartKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextFieldstartKeyTyped
        started=false;
    }//GEN-LAST:event_jTextFieldstartKeyTyped

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new NewJFrame().setVisible(true);
            }
        });
    }
    
    public void FuzzyLogic(){
        for(int i=0; i<61; i++){
            
            double x, vl, l, m, h, vh, ud, us, um, r, s, d;
            
//Dzialania na tablicy roznica  Termy VL/L/M/H/VH

            x=i-31;
            tmp[0][i]=x;
            
            //term VL   VeryLow
            if(x>=-30 && x<=-15){
                vl=1;
            }else if(x>=-15 && x<=-10){
                vl=(-10-x)/(-10-(-15));
            }else{
                vl=0;
            }
            tmp[1][i] = vl;
            
            //term L    Low
            if (x>=-15 && x<=-5){
                l=(x-(-15))/(-5-(-15));
            }else if(x>= -5 & x<= 5){
                l=(5-x)/(10);
            }else{
                l=0;
            }
            tmp[2][i]=l;
                
            //term M    Medium
            if (x>=0 & x<=8){
                m=x/8;
            }else if(x>= 8 & x<= 15){
                m=(15-x)/(15-8);
            }else{
                m=0;
            }
            tmp[3][i]=m;
            
            //term H    High
            if(x>=10 && x<=15){
                h=(x-10)/(15-10);
            }else if (x>=15 & x<=20){
                h=(20-x)/(20-15);
            }else{ 
                h=0;
            }
            tmp[4][i]=h;
            
            //termVH    VeryHigh
            if (x>=15 && x<=25){
                vh =(x-15)/(25-15);
            }else if (x>=25){ 
                vh = 1;
            }else{
                vh = 0;
            }
            tmp[5][i]=vh;
//Koniec działań na tablicy tmp
            
//Dzialania na tablicy roznica
            
            x=(i-31);
            roznica[0][i]=x;
            
            //term UDuza
            if(x>=-30 && x<=-17){
                ud = 1;
            }else if (x>= -17 && x<= -12.5){
                ud=(-12.5 - x)/((-12.5)-(-17));
            }else{ 
                ud=0;
            }
            roznica[1][i]= ud;
            
            //termUSrednia
            if(x>=-20 && x<=-10){
                us = (x-(-20))/((-10)-(-20));
            }else if(x>= -10 & x<=-6){
                us = 1;
            }
            else if(x>= -6 && x<= -4){
                us = ((-6)-x)/((-4)-(-6));
            }else{
                us = 0;
            }
            roznica[2][i] = us;
            
            //term UMala
            if (x>=-5 && x<=-3.5){
                um = (-3.5-x)/(-5-(-3.5));
            }else if(x>=-3.5 && x<0){
                um = 1;
            }else{
                um = 0;
            }
            roznica[3][i] = um;
            
            //termRowna
            if(x == 0){
                r = 1;
            }else{
                r = 0;
            }
            roznica[4][i]=r;

            //term Mala
            if (x>0 && x<=3.5){
                m = 1;
            }else if(x>=3.5 && x<=5){
                m = (5-x)/(5-3.5);
            }else{
                m = 0;
            }
            roznica[5][i] = m;

            //term Srednia
            if(x>=4 & x<=6){
                s=(x-4)/(6-4);
            }else if(x>=6 && x<= 10){
                s=1;
            }else if (x>=10 && x<= 20){
                s=(20-x)/(20-10);
            }else{
                s = 0;
            }
            roznica[6][i] = s;

            //term Duza
            if(x>=12.5 && x<=17){
                d=(x-12.5)/(17-12.5);
            }else if(x>=17 & x<=30){
                d=1;
            }else{
                d=0;
            }
            roznica[7][i]=d;
//Koniec działań na tablicy roznica
        }//FOR END
        
        for(int i=0;i<201;i++){
            
            double x,vvll,vvl,vl,l,vlm,lm,r,m,vlh,lh,h,vh;
                    
//Dzialania na tablicy y

            x=(i-101)/100;
            y[0][i]=x;
            
    //singletony
            
            //VVLL
            if (x == -1){
                vvll = 1;
            }else{
                vvll = 0;
            }
            y[1][i] = vvll;
   
            //VVL
            if(x == -0.8){
                vvl = 1;
            }else{
                vvl = 0;
            }
            y[2][i] = vvl;

            //VL
            if(x == -0.7){
                vl = 1;
            }else{
                vl = 0;
            }
            y[3][i] = vl;

            //L
            if(x == -0.5){
                l = 1;
            }else{
                l = 0;
            }
            y[4][i]=l;

            //VLM
            if (x == -0.3){
                vlm = 1;
            }else{
                vlm = 0;
            }
            y[5][i]=vlm;
    
            //LM
            if (x == -0.2){
                lm = 1;
            }else{
                lm = 0;
            }
            y[6][i]=lm;
            
            //M
            if (x == -0.1){
                m = 1;
            }else{
                m = 0;
            }
            y[7][i]=m;
      
            //Rownosc
            if (x == 0){
                r = 1;
            }else{
                r = 0;
            }
            y[8][i]=r;
            
            //M
            if (x == 0.1){
                m = 1;
            }else{
                m = 0;
            }
            y[9][i]=m;
            
            //LM
            if (x == 0.2){
                lm=1;
            }else{
                lm = 0;
            }
            y[10][i]=lm;
            
            //VLM
            if (x == 0.3){
                vlm = 1;
            }else{
                vlm = 0;
            }
            y[11][i] = vlm;
            
            //VLH
            if (x == 0.5){
                vlh = 1;
            }else{
                vlh = 0;
            }
            y[12][i]=vlh;
            
            //LH
            if (x == 0.7){
                lh = 1;
            }else{
                lh = 0;
            }
            y[13][i]=lh;
            
            //H
            if (x == 0.8){
                h = 1;
            }else{
                h = 0;
            }
            y[14][i]=h;
            
            //VH
            if (x == 1){
                vh = 1;
            }else{
                vh = 0;
            }
            y[15][i]=vh;
//Koniec działań na tablicy y
        }//FOR END
}
    
    public void Zrob(double aktualnaTempDouble, double docelowaTempDouble){
        double roznicaTempDouble = docelowaTempDouble - aktualnaTempDouble;
        int roznicaTemp = (int) roznicaTempDouble;
        int aktualnaTemp = (int) aktualnaTempDouble;
        
        //rozmywanie roznicy
        double pUD = roznica[1][roznicaTemp+31];
        double pUS = roznica[2][roznicaTemp+31];
        double pUM = roznica[3][roznicaTemp+31];
        double pR = roznica[4][roznicaTemp+31];
        double pM = roznica[5][roznicaTemp+31];
        double pS = roznica[6][roznicaTemp+31];
        double pD = roznica[7][roznicaTemp+31];
        
        //rozmycie temperatur
        double pVL = tmp[1][aktualnaTemp+31];
        double pL = tmp[2][aktualnaTemp+31];
        double pMM = tmp[3][aktualnaTemp+31];
        double pH = tmp[4][aktualnaTemp+31];
        double pVH = tmp[5][aktualnaTemp+31];
        
        //wspolczynniki
        double wVLUD = Math.min(pVL,pUD);
        double wVLUS = Math.min(pVL,pUS);
        double wVLUM = Math.min(pVL,pUM);
        double wVLR = Math.min(pVL,pR);
        double wVLM = Math.min(pVL,pM);
        double wVLS = Math.min(pVL,pS);
        double wVLD = Math.min(pVL,pD);
        double wLUD = Math.min(pL,pUD);
        double wLUS = Math.min(pL,pUS);
        double wLUM = Math.min(pL,pUM);
        double wLR = Math.min(pL,pR);
        double wLM = Math.min(pL,pM);
        double wLS = Math.min(pL,pS);
        double wLD = Math.min(pL,pD);
        double wMUD = Math.min(pMM,pUD);
        double wMUS = Math.min(pMM,pUS);
        double wMUM = Math.min(pMM,pUM);
        double wMR = Math.min(pMM,pR);
        double wMM = Math.min(pMM,pM);
        double wMS = Math.min(pMM,pS);
        double wMD = Math.min(pMM,pD);
        double wHUD = Math.min(pH,pUD);
        double wHUS = Math.min(pH,pUS);
        double wHUM = Math.min(pH,pUM);
        double wHR = Math.min(pH,pR);
        double wHM = Math.min(pH,pM);
        double wHS = Math.min(pH,pS);
        double wHD = Math.min(pH,pD);
        double wVHUD = Math.min(pVH,pUD);
        double wVHUS = Math.min(pVH,pUS);
        double wVHUM = Math.min(pVH,pUM);
        double wVHR = Math.min(pVH,pR);
        double wVHM = Math.min(pVH,pM);
        double wVHS = Math.min(pVH,pS);
        double wVHD = Math.min(pVH,pD);
        
        //agregacja
        double am1 = wVLUD;
        double am08 = Math.max(wVLUS,wLUS);
        double am07 = Math.max(Math.max(wMUD,wLUS),wVLUM);
        double am05 = Math.max(Math.max(wHUD,wMUS),wMUM);
        double am03 = Math.max(Math.max(wVHUD,wHUS),wMUM);
        double am02 = Math.max(wVHUS,wHUM);
        double am01 = wVHUM;
        double a0 = Math.max(Math.max(Math.max(Math.max(wVLR,wLR),wMR),wHR),wVHR);
        double a01 = wVLM;
        double a02 = Math.max(wLM,wVLS);
        double a03 = Math.max(Math.max(wMM,wLS),wVLD);
        double a05 = Math.max(Math.max(wHM,wMS),wLD);
        double a07 = Math.max(Math.max(wVHM,wHS),wMD);
        double a08 = Math.max(wVHS,wHD);
        double a1 = wVHD;
        
        //metoda srodka ciezkosci
        double wynik = (1*a1 + 0.8*a08 + 0.7*a07 + 0.5*a05 + 0.3+a03 + a02*0.2+ a01*01 + 0*a0 + am01*(-0.1) + am02*(-0.2) + am03*(-0.3) + am05*(-0.5) +am07*(-0.7) + am08*(-0.8) + am1*(-1))/(a1+a08+a07+a05+a03+a02+a01+a0+am01+am02+am03+am05+am07+am08+am1);
        //jTextField1.setText("Wynik srodka ciezkosci: " + wynik);
        double enginePower;
        if  (docelowaTempDouble < aktualnaTemp){
            enginePower = -5*0.0166666666666667;
        }else{
           enginePower = 5*0.0166666666666667;
        }
        
        //jTextField2.setText("Moc silnika : " + enginePower);
        double ogrzewanieNaSek = wynik*enginePower;
        if (ogrzewanieNaSek > enginePower){
            ogrzewanieNaSek = enginePower;
        }
        /*if  (docelowaTempDouble < 0){
            ogrzewanieNaSek = ogrzewanieNaSek*(-1);
        }*/
        jTextField2.setText(Double.toString(aktualnaTempDouble+ogrzewanieNaSek));
        
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private graph.Graph graph1;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JTextField jTextField2;
    private javax.swing.JTextField jTextField3;
    private javax.swing.JTextField jTextFielddoce;
    private javax.swing.JTextField jTextFieldstart;
    private javax.swing.JTextField jTextFieldtick;
    // End of variables declaration//GEN-END:variables
}
